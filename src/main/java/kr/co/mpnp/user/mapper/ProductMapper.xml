<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.mpnp.user.mapper.ProductMapper">
<!-- resultType : 조회 결과 값을 저장하기 위한 데이터타입(데이터 하나에 대한 타입 지정)
       parameterType:전달받은 파라메터 데이터 타입 지정(선택적) select( 여기 들어가는거)
       domain과 setter명이 같아야함!!  
 -->
 
 <resultMap type="productDomain" id="prdResult">
	<result column="productid" property="productid"/>
	<result column="name" property="productname"/>	
	<result column="price" property="price"/>	
	<result column="th_img" property="thimg"/>	
	<result column="info_img" property="infoimg"/>	
	<result column="status" property="status"/>	
	<result column="inputdate" property="inputdate"/>	
	<result column="reviewid" property="reviewid"/>
	<result column="star_score" property="star_score"/> 
	
 
 
 </resultMap>


<!-- 상품 중분류 리스트 코드 -->
<select id="selectprdList" resultMap="prdResult" 
parameterType="productVO">

select p.sub_id, p.name,p.price,p.th_img,p.productid,round(nvl(avg(r.star_score),0),1) staravg , nvl(count(r.reviewid),0) reviewcnt
from product p,order_detail o,review r
where p.productid=o.productid(+) and o.order_detailid=r.order_detailid(+) and p.sub_id=#{sub_id}
group by p.sub_id, p.name,p.price,p.th_img,p.productid
offset (#{pageFlag}-1) *8 rows
fetch next 8 rows only


</select>



<!-- 상품상세보기코드  -->
<select id="selectPrddetail" resultMap="prdResult" parameterType="String">

select p.name,p.price,p.th_img,p.info_img,p.status,p.productid,round(nvl(avg(r.star_score),0),1) staravg , nvl(count(r.reviewid),0) reviewcnt
from product p,order_detail o,review r
where p.productid=o.productid(+) and o.order_detailid=r.order_detailid(+) and p.productid=#{productid}
group by p.name,p.price,p.th_img,p.productid,p.info_img,p.status
	
</select>


<!--상품이미지 조회 -->
<select id="selectImg"  resultType="ProductDomain" parameterType="String">
select product_imgid,productid,product_img prdimg
from product_img
where productid=#{productid}
</select>

<!-- 상품 총 갯수  -->
<select id="selectprdCnt" resultType="int" parameterType="productVO">
select count(*) from product where sub_id=#{sub_id}

</select>


<!-- 장바구니 있는지 확인 코드 -->

<select id="selectConfirmCart" resultType="int" parameterType="productCartVO" >
select count(*)
from cart
where id=#{id} and productid=#{productid}
</select>

<!-- 찜여부 -->
<select id="selectConfirmWish" resultType="int" parameterType="WishLishVO">
select count(*)
from wish
where id=#{id} and productid=#{productid}
</select>


<!-- 찜추가 -->
<insert id="insertWishList" parameterType="productCartVO">
insert into wish(id,productid,inputdate)
values(#{id},#{productid},sysdate)
</insert>

<!-- 장바구니 추가  : 장바구니코드 시퀀스 추가후 넣는걸로~~-->
 <insert id="insertCart" parameterType="productCartVO">
insert into cart(cartid,id,productid,cartcnt,inputdate)
values(concat('ca_',lpad(seq_cart.nextval,7,0)),#{id},#{productid},#{cartcnt},sysdate)
</insert> 


<!-- 찜삭제 -->
<delete id="deleteWish" parameterType="WishLishVO">
delete from wish where id=#{id} and productid=#{productid}


</delete>

<!-- 찜 버튼 업데이트 -->


</mapper>